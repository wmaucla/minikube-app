apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pubg-app
  name: pubg-app
  namespace: pubg-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: pubg-app
  template:
    metadata:
      labels:
        app: pubg-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: pubg-sa
      containers:
      - name: pubg-base-image
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Never  # needed for local minikube pull
        args:
          - "gunicorn"
          - "--bind=0.0.0.0:8000"
          - "--worker-class"
          - "uvicorn.workers.UvicornWorker"
          - "pubg.api.main:app"
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: pubg-secret
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-pubg
              key: root-user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-pubg
              key: root-password
        - name: REDIS_PASSWORD  
          valueFrom:
            secretKeyRef:
              name: bitnami-redis-cluster
              key: redis-password
        - name: REDIS_HOST  
          value: bitnami-redis-cluster
        - name: MINIO_ENDPOINT
          value: "minio-pubg:9000"
        livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8000
            initialDelaySeconds: 3
            periodSeconds: 3
        readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pubg-app-service
  namespace: pubg-app
  labels:
    app: pubg-app
spec:
  ports:
  - port: 80
    protocol: TCP
    name: http
    targetPort: 8000
  selector:
    app: pubg-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pubg-app-ingress
  namespace: pubg-app
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: pubg-app.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pubg-app-service
            port: 
              number: 80
